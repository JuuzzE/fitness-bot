import logging
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–∏ –∫–ª—é—á–∏
GROQ_API_KEY = "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"
TELEGRAM_TOKEN = "7561034666:AAEEWXkLlHkualECQ8Bmmkn2BNtlHa5Vrg4"
logging.basicConfig(level=logging.INFO)

def ask_groq(message):
    headers = {
        "Authorization": f"Bearer {GROQ_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "messages": [{"role": "user", "content": message}],
        "model": "mixtral-8x7b-32768"
    }
    response = requests.post("https://api.groq.com/openai/v1/chat/completions", headers=headers, json=data)
    return response.json()["choices"][0]["message"]["content"]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –¥–æ–º–∞—à–Ω–∏–π AI-—Ç—Ä–µ–Ω–µ—Ä üí™\n\n–ù–∞–ø–∏—à–∏ /train —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É,\n–∏–ª–∏ /weight —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –≤–µ—Å üìâ."
    )

async def weight(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏ —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π –≤–µ—Å (–≤ –∫–≥):")
    context.user_data['awaiting_weight'] = True

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('awaiting_weight'):
        weight = update.message.text
        context.user_data['awaiting_weight'] = False
        await update.message.reply_text(f"–í–µ—Å {weight} –∫–≥ –∑–∞–ø–∏—Å–∞–Ω! üìä")
        return

    prompt = f"–¢—ã —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –¥–æ–º–∞—à–Ω—é—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –±–µ–∑ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –í–æ—Ç –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{update.message.text}"
    reply = ask_groq(prompt)
    await update.message.reply_text(reply)

async def train(update: Update, context: ContextTypes.DEFAULT_TYPE):
    prompt = "–°–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫—É—é (20 –º–∏–Ω) –¥–æ–º–∞—à–Ω—é—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –±–µ–∑ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ö–æ–¥–æ–≤, –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –∏ —Å–æ–≤–µ—Ç—ã. –°—Ç–∏–ª—å ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä."
    reply = ask_groq(prompt)
    await update.message.reply_text(reply)

app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("weight", weight))
app.add_handler(CommandHandler("train", train))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

app.run_polling()
